name: he-quan-tri-csdl

services:
  mongodb:
    image: mongo:8.0.5
    container_name: he-quan-tri-csdl-mongodb
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_DATABASE=he-quan-tri-csdl
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-admin123}
    volumes:
      - mongodb_data:/data/db
    entrypoint: >
      /bin/bash -c '
      openssl rand -base64 756 > /data/keyfile.key &&
      chmod 400 /data/keyfile.key &&
      chown mongodb:mongodb /data/keyfile.key &&
      /usr/local/bin/docker-entrypoint.sh mongod --replSet rs0 --keyFile /data/keyfile.key --bind_ip_all'
    healthcheck:
      test: mongosh
        -u $${MONGO_INITDB_ROOT_USERNAME}
        -p $${MONGO_INITDB_ROOT_PASSWORD}
        --eval "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo-1:27017',priority:1},{_id:1,host:'mongo-2:27017',priority:0.5},{_id:2,host:'mongo-3:27017',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  postgres:
    image: postgres:17.2
    container_name: he-quan-tri-csdl-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=he_quan_tri_csdl
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-admin123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongodb_data:
  postgres_data: